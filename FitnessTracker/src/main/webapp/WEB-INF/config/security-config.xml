<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns="http://www.springframework.org/schema/security"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/security
						http://www.springframework.org/schema/security/spring-security.xsd">

	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/login.html" access="permitAll"/>
		<intercept-url pattern="/loginFailed.html" access="permitAll" />
		<intercept-url pattern="/logout.html" access="permitAll" />
 		<intercept-url pattern="/**" access="hasRole('ROLE_USER')" />
		<form-login login-page="/login.html" authentication-failure-url="/loginFailed.html"/>
		<logout logout-success-url="/logout.html"/>
		<access-denied-handler error-page="/403.html"/>
	</http>
	
	 <!-- 1. authentication username & password secara hardcode 
	 <authentication-manager>
		<authentication-provider>
			<user-service>
				<user name="bryan" password="secret" authorities="ROLE_USER" />
			</user-service>
		</authentication-provider>
	  </authentication-manager> -->
	
	 <!-- 2. authentication username & password dari database
	 <authentication-manager>
		<authentication-provider user-service-ref="userDetailsService" />
	 </authentication-manager> -->
	
	 <!-- 3. authentication username & password menggunakan md5
	 <authentication-manager>
		<authentication-provider user-service-ref="userDetailsService">
			<password-encoder hash="md5"></password-encoder>
		</authentication-provider>
     </authentication-manager> -->
	
	 <!-- 4. authentication username & password menggunakan bcrypt -->
	<authentication-manager>
		<authentication-provider user-service-ref="userDetailsService">
			<password-encoder hash="bcrypt"></password-encoder>
		</authentication-provider>
	</authentication-manager>
	
	<!-- 5.  
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/**" access="hasRole('ROLE_USER')" />
	</http> -->
	
	<!-- 6. login credentials menggunakan pop up browser http basic
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/**" access="hasRole('ROLE_USER')" />
		<http-basic/>
	</http> -->
	
	<!--  7. login mechanism, logout and acces denied for authorization
	<http auto-config="true" >
		<intercept-url pattern="/login.html" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
		<intercept-url pattern="/loginFailed.html" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<intercept-url pattern="/logout.html" access="IS_AUTHENTICATED_ANONYMOUSLY" />
 		<intercept-url pattern="/**" access="ROLE_USER" />
		<form-login login-page="/login.html" authentication-failure-url="/loginFailed.html"/>
		<logout logout-success-url="/logout.html"/>
		<access-denied-handler error-page="/403.html"/>
	</http> -->
			
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url" value="jdbc:mysql://localhost:3306/fitnestracker?useSSL=false" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="password.1" />	
	</beans:bean>
	
	<beans:bean id="userDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<beans:property name="dataSource" ref="dataSource"/>	
	</beans:bean>

</beans:beans>
